<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2019 Red Hat, Inc. and/or its affiliates
  ~ and other contributors as indicated by the @author tags.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<infinispan
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:infinispan:config:14.0 http://www.infinispan.org/schemas/infinispan-config-14.0.xsd"
        xmlns="urn:infinispan:config:14.0">

    <cache-container name="keycloak">
        <transport lock-timeout="60000"/>
        <local-cache name="realms" simple-cache="true">
            <encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
            <memory max-count="10000"/>
        </local-cache>
        <local-cache name="users" simple-cache="true">
            <encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
            <memory max-count="10000"/>
        </local-cache>
        <distributed-cache name="sessions">
            <expiration lifespan="-1"/>
            <remote-store cache="sessions" xmlns="urn:infinispan:config:store:remote:14.0"
                          fetch-state="false"
                          purge="false"
                          preload="false"
                          shared="true" segmented="false">
                <remote-server host="${env.KC_REMOTE_ISPN_HOST}" port="${env.KC_REMOTE_ISPN_PORT}"/>
                <property name="rawValues">true</property>
                <property name="marshaller">org.keycloak.cluster.infinispan.KeycloakHotRodMarshallerFactory</property>
                <security>
                    <authentication>
                        <plain username="${env.KC_REMOTE_ISPN_USERNAME}"
                               password="${env.KC_REMOTE_ISPN_PASSWORD}"
                        />
                    </authentication>
                </security>
            </remote-store>
        </distributed-cache>
        <distributed-cache name="authenticationSessions">
            <expiration lifespan="-1"/>
            <remote-store cache="authenticationSessions" xmlns="urn:infinispan:config:store:remote:14.0"
                          fetch-state="false"
                          purge="false"
                          preload="false"
                          shared="true" segmented="false">
                <remote-server host="${env.KC_REMOTE_ISPN_HOST}" port="${env.KC_REMOTE_ISPN_PORT}"/>
                <property name="rawValues">true</property>
                <property name="marshaller">org.keycloak.cluster.infinispan.KeycloakHotRodMarshallerFactory</property>
                <security>
                    <authentication>
                        <plain username="${env.KC_REMOTE_ISPN_USERNAME}"
                               password="${env.KC_REMOTE_ISPN_PASSWORD}"
                        />
                    </authentication>
                </security>
            </remote-store>
        </distributed-cache>
        <distributed-cache name="offlineSessions">
            <expiration lifespan="-1"/>
            <persistence>
                <remote-store cache="offlineSessions" xmlns="urn:infinispan:config:store:remote:14.0"
                              fetch-state="false"
                              purge="false"
                              preload="false"
                              shared="true" segmented="false">
                    <remote-server host="${env.KC_REMOTE_ISPN_HOST}" port="${env.KC_REMOTE_ISPN_PORT}"/>
                    <property name="rawValues">true</property>
                    <property name="marshaller">org.keycloak.cluster.infinispan.KeycloakHotRodMarshallerFactory
                    </property>
                    <security>
                        <authentication>
                            <plain username="${env.KC_REMOTE_ISPN_USERNAME}"
                                   password="${env.KC_REMOTE_ISPN_PASSWORD}"
                            />
                        </authentication>
                    </security>
                </remote-store>
            </persistence>
        </distributed-cache>
        <distributed-cache name="clientSessions">
            <expiration lifespan="-1"/>
            <persistence>
                <remote-store cache="clientSessions" xmlns="urn:infinispan:config:store:remote:14.0"
                              fetch-state="false"
                              purge="false"
                              preload="false"
                              shared="true" segmented="false">
                    <remote-server host="${env.KC_REMOTE_ISPN_HOST}" port="${env.KC_REMOTE_ISPN_PORT}"/>
                    <property name="rawValues">true</property>
                    <property name="marshaller">org.keycloak.cluster.infinispan.KeycloakHotRodMarshallerFactory</property>
                    <security>
                        <authentication>
                            <plain username="${env.KC_REMOTE_ISPN_USERNAME}"
                                   password="${env.KC_REMOTE_ISPN_PASSWORD}"
                            />
                        </authentication>
                    </security>
                </remote-store>
            </persistence>
        </distributed-cache>
        <distributed-cache name="offlineClientSessions">
            <expiration lifespan="-1"/>
            <persistence>
                <remote-store cache="offlineClientSessions" xmlns="urn:infinispan:config:store:remote:14.0"
                              fetch-state="false"
                              purge="false"
                              preload="false"
                              shared="true" segmented="false">
                    <remote-server host="${env.KC_REMOTE_ISPN_HOST}" port="${env.KC_REMOTE_ISPN_PORT}"/>
                    <property name="rawValues">true</property>
                    <property name="marshaller">org.keycloak.cluster.infinispan.KeycloakHotRodMarshallerFactory</property>
                    <security>
                        <authentication>
                            <plain username="${env.KC_REMOTE_ISPN_USERNAME}"
                                   password="${env.KC_REMOTE_ISPN_PASSWORD}"
                            />
                        </authentication>
                    </security>
                </remote-store>
            </persistence>
        </distributed-cache>
        <distributed-cache name="loginFailures">
            <expiration lifespan="-1"/>
            <persistence>
                <remote-store cache="loginFailures" xmlns="urn:infinispan:config:store:remote:14.0"
                              fetch-state="false"
                              purge="false"
                              preload="false"
                              shared="true" segmented="false">
                    <remote-server host="${env.KC_REMOTE_ISPN_HOST}" port="${env.KC_REMOTE_ISPN_PORT}"/>
                    <property name="rawValues">true</property>
                    <property name="marshaller">org.keycloak.cluster.infinispan.KeycloakHotRodMarshallerFactory</property>
                    <security>
                        <authentication>
                            <plain username="${env.KC_REMOTE_ISPN_USERNAME}"
                                   password="${env.KC_REMOTE_ISPN_PASSWORD}"
                            />
                        </authentication>
                    </security>
                </remote-store>
            </persistence>
        </distributed-cache>
        <local-cache name="authorization" simple-cache="true">
            <encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
            <memory max-count="10000"/>
        </local-cache>
        <replicated-cache name="work">
            <expiration lifespan="-1"/>
        </replicated-cache>
        <local-cache name="keys" simple-cache="true">
            <encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
            <expiration max-idle="3600000"/>
            <memory max-count="1000"/>
        </local-cache>
        <distributed-cache name="actionTokens">
            <encoding>
                <key media-type="application/x-java-object"/>
                <value media-type="application/x-java-object"/>
            </encoding>
            <expiration max-idle="-1" lifespan="-1" interval="300000"/>
            <memory max-count="-1"/>
            <persistence>
                <remote-store cache="actionTokens" xmlns="urn:infinispan:config:store:remote:14.0"
                              fetch-state="false"
                              purge="false"
                              preload="false"
                              shared="true" segmented="false">
                    <remote-server host="${env.KC_REMOTE_ISPN_HOST}" port="${env.KC_REMOTE_ISPN_PORT}"/>
                    <property name="rawValues">true</property>
                    <property name="marshaller">org.keycloak.cluster.infinispan.KeycloakHotRodMarshallerFactory
                    </property>
                    <security>
                        <authentication>
                            <plain username="${env.KC_REMOTE_ISPN_USERNAME}"
                                   password="${env.KC_REMOTE_ISPN_PASSWORD}"
                            />
                        </authentication>
                    </security>
                </remote-store>
            </persistence>
        </distributed-cache>
    </cache-container>
</infinispan>